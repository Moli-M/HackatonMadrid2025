---
import Container from "@/components/container.astro";
import { Astronav, MenuItems, MenuIcon } from "astro-navbar";

const menuitems = [
  {
    title: "Home",
    path: "/",
  },
  {
    title: "Projects",
    path: "/projects",
  },
  {
    title: "Pricing",
    path: "/pricing",
  },
  {
    title: "Contact",
    path: "/contact",
  },
];
---

<Container>
  <header class="flex items-center justify-between py-4">
    <a href="/" class="text-lg font-bold">
      <span class="text-slate-800">INNOVA</span><span class="text-slate-500"
        >NET</span
      >
    </a>
    <Astronav>
      <MenuIcon class="lg:hidden w-5 h-5 text-gray-800 cursor-pointer" />
      <MenuItems class="hidden lg:flex lg:ml-6">
        <ul class="flex gap-6">
          {
            menuitems.map((item) => (
              <li>
                <a
                  href={item.path}
                  class="px-2 py-1 text-gray-600 hover:text-gray-900 transition-colors duration-200"
                >
                  {item.title}
                </a>
              </li>
            ))
          }
        </ul>
      </MenuItems>
    </Astronav>

    <div class="relative">
      <div class="flex items-center gap-3">
        <button
          id="userMenuBtn"
          class="text-gray-800 p-2 rounded-full hover:bg-gray-100 transition-colors"
        >
          <i class="fa-solid fa-user"></i>
        </button>
        <button
  id="accessibilityBtn"
  class="text-gray-800 p-2 rounded-full hover:bg-gray-100 transition-colors"
  aria-label="Opciones de accesibilidad"
>
  <i class="fa-solid fa-universal-access"></i>
</button>
      </div>

<div
  id="accessibilityDropdown"
  class="absolute right-0 top-full mt-2 w-72 bg-white rounded-lg shadow-xl border border-slate-100 invisible opacity-0 transition-all duration-200 transform origin-top-right z-50"
  aria-hidden="true"
>
  <div class="p-4 border-b border-slate-100">
    <span class="font-medium text-slate-800">Opciones de Accesibilidad</span>
  </div>
  <div class="p-4">
    <label for="textSizeSlider" class="block text-sm text-gray-700">Tamaño del texto:</label>
    <input type="range" id="textSizeSlider" min="1" max="2" step="0.1" value="1" class="w-full" />

    <label for="lineSpacingSlider" class="block text-sm text-gray-700 mt-3">Espaciado de líneas:</label>
    <input type="range" id="lineSpacingSlider" min="1" max="2" step="0.1" value="1" class="w-full" />

    <button id="resetTextBtn" class="mt-3 text-sm text-blue-600 hover:underline">
      Restablecer texto
    </button>
  </div>
  <div class="border-t border-slate-100">
    <button
      id="highContrastBtn"
      class="block w-full text-left px-4 py-2 hover:bg-gray-50 text-sm text-gray-700"
    >
      Alto contraste
    </button>
    <button
      id="hideMultimediaBtn"
      class="block w-full text-left px-4 py-2 hover:bg-gray-50 text-sm text-gray-700"
    >
      Ocultar contenido multimedia
    </button>
    <button
      id="savePreferencesBtn"
      class="block w-full text-left px-4 py-2 hover:bg-gray-50 text-sm text-gray-700 font-medium text-blue-600"
    >
      Guardar preferencias
    </button>
  </div>
</div>
      <div
        id="userDropdown"
        class="absolute right-0 top-full mt-2 w-64 bg-white rounded-lg shadow-xl border border-slate-100 invisible opacity-0 transition-all duration-200 transform origin-top-right"
      >
        <div class="p-4 border-b border-slate-100">
          <p class="font-medium text-slate-800">user</p>
          <p class="text-xs text-slate-500">user@example.com</p>
        </div>
        <div class="py-1">
          <a
            href="/user-settings"
            class="flex items-center px-4 py-2 text-sm text-slate-700 hover:bg-slate-50"
          >
            <i class="fa-solid fa-gear mr-2 text-slate-400"></i>Profile
          </a>
          <a
            href="/my-projects"
            class="flex items-center px-4 py-2 text-sm text-slate-700 hover:bg-slate-50"
          >
            <i class="fa-solid fa-folder-open mr-2 text-slate-400"></i>Project
            Dashboard
          </a>
          <a
            href="/accessibility"
            class="flex items-center px-4 py-2 text-sm text-slate-700 hover:bg-slate-50"
          >
            <i class="fa-solid fa-universal-access mr-2 text-slate-400"
            ></i>Accessibility
          </a>
        </div>
        <hr class="my-1 border-slate-100" />
        <div class="py-1">
          <a
            href="/logout"
            class="flex items-center px-4 py-2 text-sm text-red-600 hover:bg-red-50 rounded-b-lg"
          >
            <i class="fa-solid fa-sign-out-alt mr-2 text-red-500"></i>Logout
          </a>
        </div>
      </div>
    </div>
  </header>
</Container>

<script>
  // Manejadores para el menú desplegable
  const userMenuBtn = document.getElementById("userMenuBtn");
  const userDropdown = document.getElementById("userDropdown");
  const accessibilityBtn = document.getElementById("accessibilityBtn");
  const accessibilityDropdown = document.getElementById("accessibilityDropdown");

  // Referencias a controles de accesibilidad
  const textSizeSlider = document.getElementById("textSizeSlider");
  const lineSpacingSlider = document.getElementById("lineSpacingSlider");
  const resetTextBtn = document.getElementById("resetTextBtn");
  const highContrastBtn = document.getElementById("highContrastBtn");
  const hideMultimediaBtn = document.getElementById("hideMultimediaBtn");
  const savePreferencesBtn = document.getElementById("savePreferencesBtn");

  // Función para cerrar todos los dropdowns
  function closeAllDropdowns() {
    // Cerrar dropdown de usuario
    if (userDropdown) {
      userDropdown.classList.add("invisible", "opacity-0");
      userDropdown.classList.remove("visible", "opacity-100");
    }
    
    // Cerrar dropdown de accesibilidad
    if (accessibilityDropdown) {
      accessibilityDropdown.classList.add("invisible", "opacity-0");
      accessibilityDropdown.classList.remove("visible", "opacity-100");
      accessibilityDropdown.setAttribute("aria-hidden", "true");
    }
  }

  // Dropdown de accesibilidad
  if (accessibilityBtn && accessibilityDropdown) {
    accessibilityBtn.addEventListener("click", (e) => {
      e.stopPropagation();
      
      // Si el dropdown ya está visible, lo cerramos
      if (accessibilityDropdown.classList.contains("visible")) {
        accessibilityDropdown.classList.add("invisible", "opacity-0");
        accessibilityDropdown.classList.remove("visible", "opacity-100");
        accessibilityDropdown.setAttribute("aria-hidden", "true");
      } else {
        // Cerramos todos los dropdowns primero
        closeAllDropdowns();
        
        // Abrimos el dropdown de accesibilidad
        accessibilityDropdown.classList.remove("invisible", "opacity-0");
        accessibilityDropdown.classList.add("visible", "opacity-100");
        accessibilityDropdown.setAttribute("aria-hidden", "false");
      }
    });
  }

  // Dropdown de usuario
  if (userMenuBtn && userDropdown) {
    userMenuBtn.addEventListener("click", (e) => {
      e.stopPropagation();
      
      // Si el dropdown ya está visible, lo cerramos
      if (userDropdown.classList.contains("visible")) {
        userDropdown.classList.add("invisible", "opacity-0");
        userDropdown.classList.remove("visible", "opacity-100");
      } else {
        // Cerramos todos los dropdowns primero
        closeAllDropdowns();
        
        // Abrimos el dropdown de usuario
        userDropdown.classList.remove("invisible", "opacity-0");
        userDropdown.classList.add("visible", "opacity-100");
      }
    });
  }

  // Cerrar dropdowns al hacer clic fuera
  document.addEventListener("click", (e) => {
    // Solo procedemos si hay dropdowns definidos
    if (!accessibilityBtn || !accessibilityDropdown || !userMenuBtn || !userDropdown) return;
    
    const clickedOnAccessibility = accessibilityBtn.contains(e.target as Node) || accessibilityDropdown.contains(e.target as Node);
    const clickedOnUserMenu = userMenuBtn.contains(e.target as Node) || userDropdown.contains(e.target as Node);
    
    if (!clickedOnAccessibility && !clickedOnUserMenu) {
      closeAllDropdowns();
    }
  });

  // Cerrar dropdowns al presionar ESC
  document.addEventListener("keydown", (e) => {
    if (e.key === "Escape") {
      closeAllDropdowns();
    }
  });

  // FUNCIONALIDAD DE ACCESIBILIDAD
  // ==============================

  // Cargar configuraciones guardadas
  function loadAccessibilitySettings() {
    const savedSettings = localStorage.getItem('accessibilitySettings');
    
    if (savedSettings) {
      const settings = JSON.parse(savedSettings);
      
      // Aplicar tamaño de texto
      if (settings.textSize) {
        document.documentElement.style.setProperty('--text-scale', settings.textSize);
        if (textSizeSlider) (textSizeSlider as HTMLInputElement).value = settings.textSize;
      }
      
      // Aplicar espaciado de línea
      if (settings.lineSpacing) {
        document.documentElement.style.setProperty('--line-height-scale', settings.lineSpacing);
        if (lineSpacingSlider) (lineSpacingSlider as HTMLInputElement).value = settings.lineSpacing;
      }
      
      // Aplicar alto contraste
      if (settings.highContrast) {
        document.body.classList.add('high-contrast-mode');
        if (highContrastBtn) {
          highContrastBtn.textContent = '✓ Alto contraste';
          highContrastBtn.classList.add('active-setting');
        }
      }
      
      // Aplicar ocultamiento de multimedia
      if (settings.hideMultimedia) {
        document.body.classList.add('hide-multimedia');
        if (hideMultimediaBtn) {
          hideMultimediaBtn.textContent = '✓ Ocultar contenido multimedia';
          hideMultimediaBtn.classList.add('active-setting');
        }
      }
    }
  }

  // Ejecutar al cargar la página
  document.addEventListener('DOMContentLoaded', () => {
    loadAccessibilitySettings();
  });
  
  // Manejar cambio de tamaño de texto
  if (textSizeSlider) {
    textSizeSlider.addEventListener('input', (e) => {
      const size = (e.target as HTMLInputElement).value;
      document.documentElement.style.setProperty('--text-scale', size);
      
      // Actualizar información sobre el tamaño
      const sizeInfo = document.querySelector('#text-size-value');
      if (sizeInfo) {
        const percentage = Math.round(Number(size) * 100);
        sizeInfo.textContent = `${percentage}%`;
      }
    });
  }
  
  // Manejar cambio des espaciado de línea
  if (lineSpacingSlider) {
    lineSpacingSlider.addEventListener('input', (e) => {
      const spacing = (e.target as HTMLInputElement).value;
      document.documentElement.style.setProperty('--line-height-scale', spacing);
    });
  }
  
  // Restablecer configuración de texto
  if (resetTextBtn) {
    resetTextBtn.addEventListener('click', () => {
      document.documentElement.style.removeProperty('--text-scale');
      document.documentElement.style.removeProperty('--line-height-scale');
      
      // Restablecer sliders
      if (textSizeSlider) (textSizeSlider as HTMLInputElement).value = "1";
      if (lineSpacingSlider) (lineSpacingSlider as HTMLInputElement).value = "1";
    });
  }
  
  // Alternar modo de alto contraste
  if (highContrastBtn) {
    highContrastBtn.addEventListener('click', () => {
      document.body.classList.toggle('high-contrast-mode');
      
      // Actualizar estado del botón
      if (document.body.classList.contains('high-contrast-mode')) {
        highContrastBtn.textContent = '✓ Alto contraste';
        highContrastBtn.classList.add('active-setting');
      } else {
        highContrastBtn.textContent = 'Alto contraste';
        highContrastBtn.classList.remove('active-setting');
      }
    });
  }
  
  // Ocultar contenido multimedia
  if (hideMultimediaBtn) {
    hideMultimediaBtn.addEventListener('click', () => {
      document.body.classList.toggle('hide-multimedia');
      
      // Actualizar estado del botón
      if (document.body.classList.contains('hide-multimedia')) {
        hideMultimediaBtn.textContent = '✓ Ocultar contenido multimedia';
        hideMultimediaBtn.classList.add('active-setting');
      } else {
        hideMultimediaBtn.textContent = 'Ocultar contenido multimedia';
        hideMultimediaBtn.classList.remove('active-setting');
      }
    });
  }
  
  // Guardar preferencias
  if (savePreferencesBtn) {
    savePreferencesBtn.addEventListener('click', () => {
      const settings = {
        textSize: textSizeSlider ? (textSizeSlider as HTMLInputElement).value : "1",
        lineSpacing: lineSpacingSlider ? (lineSpacingSlider as HTMLInputElement).value : "1",
        highContrast: document.body.classList.contains('high-contrast-mode'),
        hideMultimedia: document.body.classList.contains('hide-multimedia')
      };
      
      // Guardar en localStorage
      localStorage.setItem('accessibilitySettings', JSON.stringify(settings));
      
      // Mostrar confirmación
      alert('Preferencias de accesibilidad guardadas');
      
      // Cerrar el dropdown
      closeAllDropdowns();
    });
  }
</script>

<style>
  /* Estilos para el dropdown de accesibilidad */
  .active-setting {
    background-color: #f0f9ff;
    color: #0369a1 !important;
    font-weight: 500;
  }

  /* Estilos CSS para la accesibilidad */
  :global(:root) {
    --text-scale: 1;
    --line-height-scale: 1;
  }

  /* Estilos de alto contraste */
  :global(body.high-contrast-mode) {
    background-color: #000 !important;
    color: #fff !important;
  }

  :global(body.high-contrast-mode a) {
    color: #ffff00 !important;
    text-decoration: underline !important;
  }

  :global(body.high-contrast-mode button),
  :global(body.high-contrast-mode input),
  :global(body.high-contrast-mode .bg-white),
  :global(body.high-contrast-mode nav),
  :global(body.high-contrast-mode header),
  :global(body.high-contrast-mode footer) {
    background-color: #000 !important;
    color: #fff !important;
    border-color: #fff !important;
  }

  /* Ocultar multimedia */
  :global(body.hide-multimedia img),
  :global(body.hide-multimedia video),
  :global(body.hide-multimedia iframe),
  :global(body.hide-multimedia canvas),
  :global(body.hide-multimedia svg) {
    display: none !important;
  }

  /* Escalar texto respetando la jerarquía */
  :global(html) {
    font-size: calc(100% * var(--text-scale));
  }
  
  :global(body) {
    line-height: calc(1.5 * var(--line-height-scale));
  }
  
  /* Eliminar los estilos que sobrescriben los tamaños de título */
  /* :global(p), :global(h1), :global(h2), :global(h3), 
  :global(h4), :global(h5), :global(h6), :global(span), 
  :global(a), :global(button), :global(li) {
    font-size: calc(1em * var(--text-scale)) !important;
    line-height: calc(1.5 * var(--line-height-scale)) !important;
  } */
</style>
