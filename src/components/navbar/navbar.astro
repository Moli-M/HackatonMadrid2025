---
import Container from "@/components/container.astro";
import Link from "@/components/ui/link.astro";
import { Astronav, MenuItems, MenuIcon } from "astro-navbar";

const menuitems = [
  {
    title: "Home",
    path: "/",
  },
  {
    title: "Projects",
    path: "/projects",
  },
  {
    title: "Pricing",
    path: "/pricing",
  },
  {
    title: "About",
    path: "/about",
  },
  {
    title: "Contact",
    path: "/contact",
  },
];
---

<Container>
  <header class="flex flex-col lg:flex-row justify-between items-center my-5">
    <Astronav>
      <div class="flex w-full lg:w-auto items-center justify-between">
        <a href="/" class="text-lg">
          <span class="font-bold text-slate-800">INNOVA</span>
          <span class="text-slate-500">NET</span>
        </a>
        <div class="block lg:hidden">
          <MenuIcon class="w-4 h-4 text-gray-800" />
        </div>
      </div>
      <MenuItems class="hidden w-full lg:w-auto mt-2 lg:flex lg:mt-0">
        <ul class="flex flex-col lg:flex-row lg:gap-3">
          {menuitems.map((item) => (
            <li>
              <a
                href={item.path}
                class="flex lg:px-3 py-2 items-center text-gray-600 hover:text-gray-900"
              >
                <span>{item.title}</span>
              </a>
            </li>
          ))}
        </ul>
      </MenuItems>
    </Astronav>
    <div>
      <div class="hidden lg:flex items-center gap-4 relative">
        <button id="userMenuBtn" class="text-gray-800 dark:text-white focus:outline-none p-2 rounded-full hover:bg-gray-100 transition-colors">
          <i class="fa-solid fa-user"></i>
        </button>
        <!-- Dropdown menu mejorado -->
        <div id="userDropdown" class="absolute right-0 top-full mt-2 w-64 bg-white rounded-lg shadow-xl border border-slate-100 invisible opacity-0 transition-all duration-300 z-50 transform origin-top-right">
          <!-- Header con información del usuario -->
          <div class="p-4 border-b border-slate-100">
            <p class="font-medium text-slate-800">user</p>
            <p class="text-xs text-slate-500">user@example.com</p>
          </div>
          <!-- Opciones del menú -->
          <div class="py-1">
            <a href="/user-settings" class="flex items-center px-4 py-2 text-sm text-slate-700 hover:bg-slate-50">
              <i class="fa-solid fa-gear mr-2 text-slate-400"></i>Profile
            </a>
            <a href="/my-projects" class="flex items-center px-4 py-2 text-sm text-slate-700 hover:bg-slate-50">
              <i class="fa-solid fa-folder-open mr-2 text-slate-400"></i>Project Dashboard
            </a>

            <a href="/accessibility" class="flex items-center px-4 py-2 text-sm text-slate-700 hover:bg-slate-50">
              <i class="fa-solid fa-universal-access mr-2 text-slate-400"></i>Accessibility
            </a>
          </div>
          <hr class="my-1 border-slate-100">
          <div class="py-1">
            <a href="/logout" class="flex items-center px-4 py-2 text-sm text-red-600 hover:bg-red-50 last:rounded-b-lg">
              <i class="fa-solid fa-sign-out-alt mr-2 text-red-500"></i>Logout
          </div>
        </div>
      </div>
    </div>
  </header>
</Container>

<script>
  // Script mejorado para el menú desplegable
  const userMenuBtn = document.getElementById('userMenuBtn');
  const userDropdown = document.getElementById('userDropdown');
  
  if (userMenuBtn && userDropdown) {
    // Función para mostrar/ocultar el menú
    function toggleMenu() {
      if (userDropdown && userDropdown.classList.contains('invisible')) {
        // Mostrar el menú
        if (userDropdown) {
          userDropdown.classList.remove('invisible', 'opacity-0');
        }
        if (userDropdown) {
          userDropdown.classList.add('visible', 'opacity-100');
        }
      } else {
        // Ocultar el menú
        if (userDropdown) {
          userDropdown.classList.add('invisible', 'opacity-0');
        }
        if (userDropdown) {
          userDropdown.classList.remove('visible', 'opacity-100');
        }
      }
    }
    
    // Mostrar/ocultar al hacer clic en el botón de usuario
    userMenuBtn.addEventListener('click', (e) => {
      e.stopPropagation();
      toggleMenu();
    });
    
    // Cerrar el menú al hacer clic fuera de él
    document.addEventListener('click', (e) => {
      if (!userMenuBtn.contains(e.target as Node) && !userDropdown.contains(e.target as Node)) {
        userDropdown.classList.add('invisible', 'opacity-0');
        userDropdown.classList.remove('visible', 'opacity-100');
      }
    });
  }
  
  // Activar la herramienta de accesibilidad
  const activateAccessibility = document.getElementById('activateAccessibility');
  if (activateAccessibility) {
    activateAccessibility.addEventListener('click', (e) => {
      e.preventDefault();
      // Activar la herramienta de accesibilidad (hacer clic en el botón)
      const accessibilityBtn = document.getElementById('miBotonAccesibilidad');
      if (accessibilityBtn) {
        accessibilityBtn.click();
      }
    });
  }
</script>